{"version":3,"sources":["components/Spinner/index.js","redux/actions/index.js","components/CurrencyForm/index.js","components/History/index.js","redux/reducers/convertReducer.js","redux/reducers/currencyReducer.js","redux/reducers/historyReducer.js","redux/reducers/index.js","services/api/index.js","config.js","redux/sagas/index.js","index.js","pages/Home/index.js"],"names":["props","CircularProgress","getCurrencies","createRoutine","convertCurrency","saveHistory","removeHistory","useStyle","makeStyles","theme","paper","borderTop","palette","primary","main","title","margin","CurrencyForm","classes","dispatch","useDispatch","useSelector","state","currency","convert","React","useState","from","setFrom","to","setTo","amount","setAmount","useEffect","Actions","request","Typography","className","align","component","variant","Grid","container","justify","spacing","item","xs","Paper","elevation","square","Box","p","box","paragraph","color","isFetched","Object","keys","result","length","code","Spinner","style","display","marginY","TextField","value","onChange","e","target","isValid","test","fullWidth","id","label","type","InputLabelProps","shrink","sm","select","list","map","cr","MenuItem","IconButton","onClick","temp","aria-label","Button","disableElevation","size","disabled","wrapper","padding","marginBottom","maxWidth","StyledTableCell","withStyles","head","backgroundColor","common","white","body","fontSize","TableCell","HistoryPage","history","Container","TableContainer","Table","TableHead","TableRow","TableBody","row","index","scope","date","initialState","error","action","REQUEST","SUCCESS","payload","FAILURE","filter","_","combineReducers","convertReducer","currencyReducer","historyReducer","axios","defaults","params","headers","create","baseURL","queryBuilder","url","query","buildURL","path","queryParams","getCurList","convertCur","root","call","api","get","symbols","data","put","values","failure","toFixed","message","all","takeLatest","sagaMiddleware","createSagaMiddleware","store","createStore","rootReducer","applyMiddleware","run","rootSaga","ReactDOM","render","exact","History","document","getElementById"],"mappings":"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","file":"static/js/main.dc5620e1.chunk.js","sourcesContent":["import React from 'react';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nexport default (props) => (\r\n      <CircularProgress {...props} />\r\n)","import { createRoutine } from 'redux-saga-routines';\r\n\r\nconst getCurrencies = createRoutine('GET_CURRENCIES');\r\nconst convertCurrency = createRoutine('CONVERT_CURRENCY');\r\nconst saveHistory = createRoutine('SAVE_HISTORY');\r\nconst removeHistory = createRoutine('REMOVE_HISTORY');\r\n\r\nexport default {\r\n  getCurrencies,\r\n  convertCurrency,\r\n  saveHistory,\r\n  removeHistory\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport {\r\n  Typography,\r\n  TextField,\r\n  MenuItem,\r\n  Box,\r\n  Grid,\r\n  Paper,\r\n  IconButton,\r\n  Button,\r\n} from '@material-ui/core';\r\nimport SyncAltIcon from '@material-ui/icons/SyncAlt';\r\nimport Spinner from '../Spinner';\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport Actions from '../../redux/actions';\r\n\r\nconst useStyle = makeStyles(theme => ({\r\n  paper: {\r\n    borderTop: '6px solid ' + theme.palette.primary.main\r\n  },\r\n  title: {\r\n    margin: '20px 0 40px'\r\n  }\r\n}));\r\n\r\nconst CurrencyForm = () => {\r\n\r\n  const classes = useStyle();\r\n  const dispatch = useDispatch();\r\n  const { currency, convert } = useSelector(state => state);\r\n\r\n  const [from, setFrom] = React.useState('USD');\r\n  const [to, setTo] = React.useState('UZS');\r\n  const [amount, setAmount] = React.useState(1);\r\n\r\n  React.useEffect(() => {\r\n    dispatch(Actions.getCurrencies.request())\r\n  }, [dispatch]);\r\n\r\n\r\n  const handleSwap = () => {\r\n    const temp = to;\r\n    setTo(from);\r\n    setFrom(temp);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    dispatch(Actions.convertCurrency.request({\r\n      from,\r\n      to,\r\n      amount\r\n    }));\r\n    \r\n  },[from, to, dispatch]);\r\n\r\n  const handleConvert = () => {\r\n    dispatch(Actions.convertCurrency.request({\r\n      from,\r\n      to,\r\n      amount\r\n    }));\r\n  }\r\n\r\n  const handleAmount = e => {\r\n    const value = e.target.value;\r\n    const isValid = /^[0-9\\b]+$/.test(value);\r\n    if(value !== '0' && (value === '' || isValid)){\r\n      setAmount(value);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>      \r\n      <Typography className={classes.title} align=\"center\" component=\"h1\" variant=\"h4\">Currency Converter</Typography>\r\n      <Grid container justify=\"center\" spacing={0}>\r\n        <Grid item xs={4}>\r\n          <Paper className={classes.paper} elevation={2} square>\r\n            <Box p={5} className={classes.box}>\r\n              <Typography paragraph component=\"p\" align=\"center\" variant=\"subtitle2\" color=\"textSecondary\">Exchange Rate</Typography>\r\n              {\r\n                convert.isFetched && Object.keys(convert.result).length\r\n                ? <Typography component=\"p\" align=\"center\" variant=\"h5\">\r\n                  <b>{convert.result.from.amount} </b>\r\n                  {convert.result.from.code}\r\n                  {' = '} \r\n                  <b>{convert.result.to.amount} </b> \r\n                  {convert.result.to.code}\r\n                </Typography>\r\n                : null\r\n              }\r\n              {\r\n                convert.isFetched && !Object.keys(convert.result).length\r\n                ?  <Typography component=\"p\" align=\"center\" variant=\"subtitle1\">Enter some money to see the result</Typography>\r\n                : null\r\n              }\r\n              {\r\n                !convert.isFetched && <Spinner style={{display:'block',margin:'auto'}} />\r\n              }\r\n              <Box marginY={5}>\r\n                <Grid container spacing={3}>\r\n                  <Grid item xs={12}>\r\n                    <TextField\r\n                      value={amount}\r\n                      onChange={handleAmount}\r\n                      fullWidth\r\n                      id=\"amount\"\r\n                      label=\"Amount\"\r\n                      type=\"text\"\r\n                      variant=\"outlined\"\r\n                      InputLabelProps={{\r\n                        shrink: true,\r\n                      }}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item sm={5} xs={12}>\r\n                    <TextField\r\n                      value={from}\r\n                      onChange={e => setFrom(e.target.value)}\r\n                      select\r\n                      fullWidth\r\n                      id=\"amount\"\r\n                      label=\"From\"\r\n                      type=\"number\"\r\n                      variant=\"outlined\"\r\n                      InputLabelProps={{\r\n                        shrink: true,\r\n                      }}\r\n                    >\r\n                      {\r\n                        currency.list.length ? currency.list.map(cr => {\r\n                          return (\r\n                            <MenuItem key={cr.code} value={cr.code}>\r\n                              {cr.code}\r\n                            </MenuItem>\r\n                          )\r\n                        })\r\n                        : <MenuItem value={from}>\r\n                            {from}\r\n                          </MenuItem>\r\n                      }\r\n                    </TextField>\r\n                  </Grid>\r\n                  <Grid item xs={2}>\r\n                      <IconButton onClick={handleSwap}>\r\n                        <SyncAltIcon color=\"primary\" aria-label=\"Swap button\" />\r\n                      </IconButton>\r\n                  </Grid>\r\n                  <Grid item sm={5} xs={12}>\r\n                    <TextField\r\n                      value={to}\r\n                      onChange={e => setTo(e.target.value)}\r\n                      select\r\n                      fullWidth\r\n                      id=\"amount\"\r\n                      label=\"To\"\r\n                      type=\"number\"\r\n                      variant=\"outlined\"\r\n                      InputLabelProps={{\r\n                        shrink: true,\r\n                      }}\r\n                    >\r\n                      {\r\n                        currency.list.length ? currency.list.map(cr => {\r\n                          return (\r\n                            <MenuItem key={cr.code} value={cr.code}>\r\n                              {cr.code}\r\n                            </MenuItem>\r\n                          )\r\n                        })\r\n                        : <MenuItem value={to}>\r\n                            {to}\r\n                          </MenuItem>\r\n                      }\r\n                    </TextField>\r\n                  </Grid>\r\n                </Grid>\r\n              </Box>\r\n              <Button \r\n                variant=\"contained\" \r\n                color=\"primary\" \r\n                disableElevation \r\n                size=\"large\" \r\n                fullWidth\r\n                disabled={!convert.isFetched}\r\n                onClick={handleConvert}\r\n              >{\r\n                convert.isFetched ? 'Convert' : 'Converting...'\r\n              }</Button>\r\n            </Box>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default CurrencyForm;","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Actions from '../../redux/actions';\r\n\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport {\r\n  Container,\r\n  Paper,\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  IconButton,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/DeleteOutline'\r\n\r\nconst useStyle = makeStyles(() => ({\r\n  wrapper: {\r\n    padding: '50px 0'\r\n  },\r\n  title: {\r\n    marginBottom: '20px'\r\n  },\r\n  paper: {\r\n    maxWidth: 700,\r\n    margin: 'auto'\r\n  }\r\n}));\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: theme.palette.primary.main,\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst HistoryPage = () => {\r\n  const classes = useStyle();\r\n  const dispatch = useDispatch();\r\n  const { list } = useSelector(state => state.history);\r\n\r\n  return (\r\n    <div className={classes.wrapper}>\r\n      <Container>\r\n        <Typography className={classes.title} color='textSecondary' align='center' component='h2' variant='h4'>History</Typography>\r\n        <TableContainer className={classes.paper} component={Paper}>\r\n          <Table aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <StyledTableCell>№</StyledTableCell>\r\n                <StyledTableCell>From</StyledTableCell>\r\n                <StyledTableCell>To</StyledTableCell>\r\n                <StyledTableCell>Date</StyledTableCell>\r\n                <StyledTableCell>Remove</StyledTableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {list.length ? list.map((row,index) => (\r\n                <TableRow key={index}>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    {index+1}\r\n                  </TableCell>\r\n                  <TableCell><b>{row.from.amount}</b> {row.from.code}</TableCell>\r\n                  <TableCell><b>{row.to.amount}</b> {row.to.code}</TableCell>\r\n                  <TableCell>{row.date}</TableCell>\r\n                  <TableCell>\r\n                    <IconButton onClick={() => dispatch(Actions.removeHistory.request(index))} color=\"secondary\">\r\n                      <DeleteIcon></DeleteIcon>\r\n                    </IconButton>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))\r\n              : (\r\n                  <TableRow>\r\n                    <TableCell>No data</TableCell>\r\n                  </TableRow>\r\n                )\r\n              }\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Container>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HistoryPage;","import Actions from '../actions';\r\n\r\nconst initialState = {\r\n  isFetched: true,\r\n  result: {},\r\n  error: null\r\n}\r\n\r\nfunction convertCurrency(state = initialState, action){\r\n  switch(action.type){\r\n    case Actions.convertCurrency.REQUEST:\r\n      return {\r\n        ...state,\r\n        isFetched: false,\r\n        error: null\r\n      }\r\n    case Actions.convertCurrency.SUCCESS:\r\n      return {\r\n        ...state,\r\n        isFetched: true,\r\n        result: action.payload,\r\n        error: null\r\n      }\r\n    case Actions.convertCurrency.FAILURE:\r\n      return {\r\n        ...state,\r\n        isFetched: true,\r\n        error: action.payload\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default convertCurrency","import Actions from '../actions';\r\n\r\nconst initialState = {\r\n  isFetched: true,\r\n  list: [],\r\n  error: null\r\n}\r\n\r\nfunction getCurrencies(state = initialState, action){\r\n  switch(action.type){\r\n    case Actions.getCurrencies.REQUEST:\r\n      return {\r\n        ...state,\r\n        isFetched: false,\r\n        error: null\r\n      }\r\n    case Actions.getCurrencies.SUCCESS:\r\n      return {\r\n        ...state,\r\n        isFetched: true,\r\n        list: [...action.payload],\r\n        error: null\r\n      }\r\n    case Actions.getCurrencies.FAILURE:\r\n      return {\r\n        ...state,\r\n        isFetched: true,\r\n        error: action.payload\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default getCurrencies","import Actions from '../actions';\r\n\r\nconst initialState = {\r\n  list: []\r\n}\r\n\r\nfunction saveHistory(state=initialState, action){\r\n  switch(action.type){\r\n    case Actions.saveHistory.SUCCESS:\r\n      return {\r\n        ...state,\r\n        list: [...state.list, action.payload]\r\n      }\r\n    case Actions.removeHistory.REQUEST:\r\n      return {\r\n        ...state,\r\n        list: state.list.filter((_,index) => index !== action.payload)\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default saveHistory","import { combineReducers } from 'redux';\r\nimport convertReducer from './convertReducer';\r\nimport currencyReducer from './currencyReducer';\r\nimport historyReducer from './historyReducer';\r\n\r\nexport default combineReducers({\r\n  convert: convertReducer,\r\n  currency: currencyReducer,\r\n  history: historyReducer\r\n});","import axios from 'axios';\r\nimport buildURL from 'build-url';\r\nimport config from '../../config';\r\n\r\n\r\naxios.defaults.params = {};\r\n// axios.defaults.params['_f'] = 'json';\r\n// axios.defaults.params['Referer'] = 'localhost:3000';\r\naxios.defaults.headers.common['Accept'] = 'application/json';\r\n// axios.defaults.headers.common['X_CMC_PRO_API_KEY'] = config.API_KEY;\r\n// axios.defaults.headers.common['Access-Control-Allow-Origin'] = '*';\r\n\r\n\r\nconst queryBuilder = (url='',{from,to,amount}={}) => {\r\n  \r\n  const query = {};\r\n\r\n  // if(config.API_KEY){\r\n  //   query['api_key'] = config.API_KEY;\r\n  // }\r\n\r\n  if(from){\r\n    query['from'] = from\r\n  }\r\n  if(to){\r\n    query['to'] = to\r\n  }\r\n  if(amount){\r\n    query['amount'] = amount\r\n  }\r\n\r\n  return buildURL({\r\n    path: url,\r\n    queryParams: query\r\n  })\r\n}\r\n\r\nexport default {\r\n  request: axios.create({\r\n    baseURL: config.API_ROOT\r\n  }),\r\n  queryBuilder\r\n}","export default {\r\n  API_ROOT: 'https://api.exchangerate.host',\r\n  API_KEY: 'w42xf6FfDec8kdVszkNqJs9An9wfwB'\r\n}","import { call, put, all, takeLatest } from 'redux-saga/effects'\r\nimport Actions from '../actions';\r\nimport { api } from '../../services';\r\n\r\nfunction* getCurList(){\r\n  try{\r\n    const { data: { symbols } } = yield call(\r\n      api.request.get,\r\n      api.queryBuilder('/symbols')\r\n    );\r\n\r\n    yield put({\r\n      type: Actions.getCurrencies.SUCCESS,\r\n      payload: Object.values(symbols)\r\n    });\r\n  }\r\n  catch(err){\r\n    yield put(Actions.getCurrencies.failure(err));\r\n  }\r\n}\r\n\r\nfunction* convertCur({ payload = {} }) {\r\n  \r\n  try{\r\n    const { data: {result, date} } = yield call(\r\n      api.request.get,\r\n      api.queryBuilder('/convert', {...payload})\r\n    )\r\n    \r\n    const data = {\r\n      from: {\r\n        code: payload.from,\r\n        amount: payload.amount\r\n      },\r\n      to: {\r\n        code: payload.to,\r\n        amount: result.toFixed(2)\r\n      },\r\n      date\r\n    }\r\n\r\n    yield put({\r\n      type: Actions.convertCurrency.SUCCESS,\r\n      payload: data\r\n    });\r\n\r\n    yield put({\r\n      type: Actions.saveHistory.SUCCESS,\r\n      payload: data\r\n    });\r\n\r\n  }\r\n  catch(err){\r\n    yield put(Actions.convertCurrency.failure(err.message));\r\n  }\r\n}\r\n\r\nexport default function* root(){\r\n  yield all([\r\n    takeLatest(Actions.getCurrencies.REQUEST, getCurList),\r\n    takeLatest(Actions.convertCurrency.REQUEST, convertCur)\r\n  ]);\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Home from './pages/Home';\nimport 'fontsource-roboto';\n\nimport './assets/style/style.css';\n\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\n//redux\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport createSagaMiddleware from 'redux-saga';\nimport rootReducer from './redux/reducers';\nimport rootSaga from './redux/sagas';\n\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(rootReducer, applyMiddleware(sagaMiddleware));\n\nsagaMiddleware.run(rootSaga);\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n      </Switch>\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n);\n\n","import React from 'react'\r\nimport CurrencyForm from '../../components/CurrencyForm';\r\nimport History from '../../components/History';\r\n\r\nexport default () => {\r\n    return (\r\n      <div>\r\n        <CurrencyForm />\r\n        <History />\r\n      </div>\r\n    )\r\n}"],"sourceRoot":""}